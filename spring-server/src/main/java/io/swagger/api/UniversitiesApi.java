/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.AddNewUniversityRequest;
import io.swagger.model.AddNewUniversityResponse;
import io.swagger.model.GetNotAssignedStudentsResponse;
import io.swagger.model.GetStudentsOfUniversityResponse;
import io.swagger.model.SetUniversityStatusRequest;
import io.swagger.model.SetUniversityStatusResponse;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-10-10T10:52:14.903Z")

@Api(value = "universities", description = "the universities API")
public interface UniversitiesApi {

    @ApiOperation(value = "Create new university", notes = "Return created university", response = AddNewUniversityResponse.class, tags={ "universities", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = AddNewUniversityResponse.class),
        @ApiResponse(code = 400, message = "Invalid input. Please check your input and try again later.", response = Void.class),
        @ApiResponse(code = 500, message = "Some internal server errors has occured. Please try again later.", response = Void.class) })
    
    @RequestMapping(value = "/universities/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AddNewUniversityResponse> addNewUniversity(@ApiParam(value = "University information" ,required=true )  @Valid @RequestBody AddNewUniversityRequest body);


    @ApiOperation(value = "Returns students that are not assigned to university or assigned to closed one or that is pending government approval", notes = "", response = GetNotAssignedStudentsResponse.class, tags={ "universities", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = GetNotAssignedStudentsResponse.class),
        @ApiResponse(code = 404, message = "Students or university not found", response = Void.class),
        @ApiResponse(code = 500, message = "Some internal server errors has occured. Please try again later.", response = Void.class) })
    
    @RequestMapping(value = "/universities/notAssigned",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GetNotAssignedStudentsResponse> getNotAssignedStudents();


    @ApiOperation(value = "Get information about students of the universit by university ID", notes = "Return information about students", response = GetStudentsOfUniversityResponse.class, tags={ "universities", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = GetStudentsOfUniversityResponse.class),
        @ApiResponse(code = 400, message = "Invalid input. Please check your input and try again later.", response = Void.class),
        @ApiResponse(code = 404, message = "Students or university not found", response = Void.class),
        @ApiResponse(code = 500, message = "Some internal server errors has occured. Please try again later.", response = Void.class) })
    
    @RequestMapping(value = "/universities/{id}/students",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GetStudentsOfUniversityResponse> getStudentsOfUniversity(@ApiParam(value = "ID of university",required=true ) @PathVariable("id") Long id);


    @ApiOperation(value = "Set universities status", notes = "Return statuses with updated universies", response = SetUniversityStatusResponse.class, tags={ "universities", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = SetUniversityStatusResponse.class),
        @ApiResponse(code = 400, message = "Invalid input. Please check your input and try again later.", response = Void.class),
        @ApiResponse(code = 404, message = "University not found", response = Void.class),
        @ApiResponse(code = 500, message = "Some internal server errors has occured. Please try again later.", response = Void.class) })
    
    @RequestMapping(value = "/universities/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<SetUniversityStatusResponse> setUniversityStatus(@ApiParam(value = "Statuses with usiversities" ,required=true )  @Valid @RequestBody SetUniversityStatusRequest body);

}
